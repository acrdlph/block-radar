{"ast":null,"code":"var _jsxFileName = \"/home/achill/Projects/aragon/block-radar/src/components/BlockBox.js\";\nimport React from 'react';\nimport './BlockBox.css';\n\nvar BlockBox = function BlockBox(props) {\n  // calculate the width of the box based on the transaction volume \n  // (percentage of #transactions in block relative to total #transactions across the 10 blocks)\n  var width = Math.floor(props.blockData.transactions.length / props.totalTx * 100);\n  return (// use flexbox order property to show latest block (highest block number) one the very left\n    React.createElement(\"div\", {\n      className: \"BlockBox\",\n      style: {\n        width: width,\n        order: -props.blockData.blockNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"BlockNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"#\", props.blockData.blockNumber))\n  );\n};\n\nexport default BlockBox;","map":{"version":3,"sources":["/home/achill/Projects/aragon/block-radar/src/components/BlockBox.js"],"names":["React","BlockBox","props","width","Math","floor","blockData","transactions","length","totalTx","order","blockNumber"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAEtB;AACA;AACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAYH,KAAK,CAACI,SAAN,CAAgBC,YAAhB,CAA6BC,MAA7B,GAAsCN,KAAK,CAACO,OAA7C,GAAwD,GAAnE,CAAd;AAEA,SACI;AACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEN,QAAAA,KAAK,EAAEA,KAAT;AAAgBO,QAAAA,KAAK,EAAE,CAACR,KAAK,CAACI,SAAN,CAAgBK;AAAxC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACMT,KAAK,CAACI,SAAN,CAAgBK,WADtB,CADJ;AAFJ;AAQH,CAdD;;AAgBA,eAAeV,QAAf","sourcesContent":["import React from 'react';\nimport './BlockBox.css';\n\nconst BlockBox = props => {\n\n    // calculate the width of the box based on the transaction volume \n    // (percentage of #transactions in block relative to total #transactions across the 10 blocks)\n    const width = Math.floor((props.blockData.transactions.length / props.totalTx) * 100);\n\n    return (\n        // use flexbox order property to show latest block (highest block number) one the very left\n        <div className=\"BlockBox\" style={{ width: width, order: -props.blockData.blockNumber }}>\n            <p className=\"BlockNumber\">\n                #{props.blockData.blockNumber}\n            </p>\n        </div>\n    );\n}\n\nexport default BlockBox;"]},"metadata":{},"sourceType":"module"}